import binascii
 
 
def decrypt(Cipher, KeyBytes):
    s_box = list(range(256))

    j = 0
    out = []

    #KSA Phase
    for i in range(256):
        j = (j + s_box[i] + ord(key[i % len(key)] )) % 256
        s_box[i] , s_box[j] = s_box[j] , s_box[i]

    #PRGA Phase
    i = j = 0
    for char in Cipher:
        i = ( i + 1 ) % 256
        j = ( j + s_box[i] ) % 256
        s_box[i] , s_box[j] = s_box[j] , s_box[i]
        out.append(chr(char ^ s_box[(s_box[i] + s_box[j]) % 256]))

    return ''.join(out)

 
if __name__ == "__main__":
    with open('svchost.dll', 'rb') as f:
        data = b''.join(f.readlines())
    key = 'ar1z7d6556sAyAXtUQc2'
    plain = decrypt(data, key)

    with open("decrypt.dll", 'wb') as f:
        f.write(plain.encode('latin1'))

